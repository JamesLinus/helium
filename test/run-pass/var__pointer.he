fn test_primitives
{
    /** init */

    let a = 10;
    let b: &int = &a;

    assert! (a == *b && *b == 10);

    /** assignment */

    let c: &int;
    c = &a;
    /* *c = 11; */

    assert! (a == *c && *c == 10);
}

def Point = { x: int, y: int }

fn test_records
{
    /** init */

    let a = Point{ x = 10, y = 11 };
    let b: &Point = &a;
    let c: Point = *b;

    assert! (&a <> &c);
    assert! (a.x == c.x);
    assert! (a.y == c.y);

    /** assignment */

    let d = Point{ x = 12, y = 13 };
    let e: &Point;
    e = &d;
    let f: Point;
    f = *e;

    assert! (&d <> &f);
    assert! (d.x == f.x);
    assert! (d.y == f.y);
}

fn test_arrays
{
    /** init */

    let a = [1,2,3];
    let b: &[int;3] = &a;
    let c: [int;3] = *b;

    assert! (&a <> &c);
    assert! (a[0] == c[0]);
    assert! (a[1] == c[1]);
    assert! (a[2] == c[2]);

    /** assignment */

    let d = [1,2,3];
    let e: &[int;3] = &d;
    let f: [int;3];
    f = *e;

    assert! (&d <> &f);
    assert! (d[0] == f[0]);
    assert! (d[1] == f[1]);
    assert! (d[2] == f[2]);
}

fn main
{
    test_primitives();
    test_records();
    test_arrays();
}
