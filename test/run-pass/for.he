fn test_break
{
    let a = 5;
    for (i = 0 to 10)
    {
        a = a - 1;

        if (a == 3)
        {
            break
        }
    }

    assert! (a == 3);

    for (i = (1 + 1) to (10 * 10)) { 1; }
}

fn test_break_deep
{
    let a = 5;
    let b = 0;
    let c = 0;

    for (i = 0 to 10)
    {
        for (i = 0 to 10)
        {
            for (i = 0 to 10)
            {
                a = a - 1;

                if (a == 3)
                {
                    break
                }
            }

            b = 1;
            break
        }

        c = 1;
        break
    }

    assert! (a == 3);
    assert! (b == 1);
    assert! (c == 1);
}

fn test_scope
{
    let a = 5;

    for (i = 0 to 10)
    {
        let a = 10;
        assert! (a == 10);
        break
    }

    assert! (a == 5);
}

fn test_simple
{
    let a = 0;

    for (i = 0 to 10)
    {
        a = i;
    }

    assert! (a == 10);
}

fn main
{
    test_break ();
    test_break_deep ();
    test_scope ();
    test_simple ();
}
